name: CI and Deploy Sitemax

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  ci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x, 22.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Verify pnpm
        run: pnpm --version

      - name: Install dependencies
        run: pnpm install

      - name: Install Playwright browsers (required for tests)
        run: pnpm exec playwright install --with-deps

      - name: Build site
        run: pnpm run build

      - name: "Debug: list repository root & dist"
        run: |
          echo "üì¶ Repo root files:"
          ls -la
          echo ""
          echo "üìÇ dist contents (if any):"
          if [ -d dist ]; then
            ls -la dist || true
            echo "---- head of dist/index.html ----"
            head -n 50 dist/index.html || true
          else
            echo "dist/ directory not found"
          fi

      - name: Run Playwright SEO tests
        run: pnpm exec playwright test || exit 1

  deploy:
    needs: ci
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Verify pnpm
        run: pnpm --version

      - name: Install dependencies
        run: pnpm install

      - name: Build site with Vite (Sitemax plugin)
        run: pnpm run build

      - name: Verify SEO plugin output (dist)
        run: |
          echo "üìÇ Contents of dist/"
          ls -la dist || true
          if [ ! -f dist/sitemap.xml ]; then
            echo "‚ùå sitemap.xml missing in dist/"
            exit 1
          else
            echo "‚úÖ dist/sitemap.xml exists (size: $(stat -c%s dist/sitemap.xml) bytes)"
            echo "---- head of dist/sitemap.xml ----"
            head -n 40 dist/sitemap.xml || true
          fi
          if [ ! -f dist/robots.txt ]; then
            echo "‚ùå robots.txt missing in dist/"
            exit 1
          else
            echo "‚úÖ dist/robots.txt exists (size: $(stat -c%s dist/robots.txt) bytes)"
            echo "---- head of dist/robots.txt ----"
            head -n 20 dist/robots.txt || true
          fi

      - name: Copy generated sitemap/robots into public/ and commit to main (optional persistence)
        env:
          GIT_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          echo "Ensure public/ exists"
          mkdir -p public
          cp -v dist/sitemap.xml public/ 2>/dev/null || true
          cp -v dist/robots.txt public/ 2>/dev/null || true
          echo "Listing public/:"
          ls -la public || true
          # If files were copied, commit them back to main so future builds include them as static files.
          if git status --porcelain | grep -q "public/"; then
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add public/sitemap.xml public/robots.txt || true
            git commit -m "chore: sync dist sitemap & robots to public [skip ci]" || echo "No changes to commit"
            echo "Pushing committed public/ files back to main (will not re-run workflows due to [skip ci])"
            git push "https://${GIT_TOKEN}@github.com/${{ github.repository }}.git" HEAD:main --quiet || echo "Push failed or nothing to push"
          else
            echo "No changes detected in public/ to commit"
          fi

      - name: Verify public/ contains files
        run: |
          echo "üìÇ public/ listing"
          ls -la public || true
          test -f public/sitemap.xml && echo "public/sitemap.xml present" || echo "public/sitemap.xml missing"
          test -f public/robots.txt && echo "public/robots.txt present" || echo "public/robots.txt missing"

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist

      - name: Verify gh-pages branch contents (debug)
        if: always()
        run: |
          echo "Fetch and list gh-pages branch root (if it exists)"
          git fetch --no-tags --prune --depth=1 origin gh-pages || echo "gh-pages branch may not exist"
          mkdir -p /tmp/gh-pages
          # try to populate a worktree for the gh-pages branch for inspection
          git worktree add /tmp/gh-pages origin/gh-pages || echo "worktree add failed (branch may not exist)"
          echo "---- /tmp/gh-pages listing ----"
          ls -la /tmp/gh-pages || true
          echo "Check for sitemap and robots in gh-pages:"
          if [ -f /tmp/gh-pages/sitemap.xml ]; then
            echo "‚úÖ gh-pages/sitemap.xml present (size: $(stat -c%s /tmp/gh-pages/sitemap.xml) bytes)"
          else
            echo "‚ùå gh-pages/sitemap.xml missing"
          fi
          if [ -f /tmp/gh-pages/robots.txt ]; then
            echo "‚úÖ gh-pages/robots.txt present (size: $(stat -c%s /tmp/gh-pages/robots.txt) bytes)"
          else
            echo "‚ùå gh-pages/robots.txt missing"
          fi
